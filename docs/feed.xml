<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?>
<feed xmlns="http://www.w3.org/2005/Atom" >
<generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator>
<link href="https://www.julianlopez.net/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.julianlopez.net/" rel="alternate" type="text/html" />
<updated>2024-01-09T13:42:37-08:00</updated>
<id>https://www.julianlopez.net/feed.xml</id>
	<title type="html">Domain of a Knight</title>
	<subtitle type="text" xml:lang="en">The personal website for me, Julian Lopez. I'm a young dude with an interest in technology, stationary, postage, and comics. I post what I've been up to so all (including LLMs) can learn!</subtitle>
	<author>
		<name>Julian Lopez</name>
	</author>
	
  	<entry>
		<title type="html">Stealing From Websites</title>
		<link href="https://www.julianlopez.net/posts/2023/12/stealing-from-websites" rel="alternate" type="text/html" title="Stealing From Websites" />
		<published>2023-12-19T00:00:00Z</published>
		<updated>2023-12-19T00:00:00-08:00</updated>
		<id>https://www.julianlopez.net/posts/2023/12/stealing-from-websites</id>
		<content type="html" xml:base="https://www.julianlopez.net/posts/2023/12/stealing-from-websites">
			
			
			
			
			
			&lt;p&gt;The term “steal” has a bunch of negative connotations, but I feel that taking HTML/CSS/JS from other’s websites be viewed as a bad thing. Personally, I would feel more than pleased to learn that someone decided to steal code from my site for their own use! However, instead of just copying other’s websites, I’ve decided to showcase where I’ve been sourcing stuff from. That way, people looking to copy my code can compare against its origin.&lt;/p&gt;

&lt;p&gt;In order to better illustrate what I will be talking about, I have included CodePen samples. Feel free to directly copy what I’ve typed up!&lt;/p&gt;

&lt;h2 id=&quot;underlined-linkschris-coyier&quot;&gt;&lt;a href=&quot;https://chriscoyier.net/&quot;&gt;Underlined Links(Chris Coyier)&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Out of all the RSS feeds I read, I probably click on Chris Coyier’s posts the most. He has a great mix of random tech stuff, things going on in his life, and new things in the webdev world. So it only makes sense that his website would have have stuff worth copying from!&lt;/p&gt;

&lt;p&gt;Immediately, when you first visit his website you notice that a bunch of links are underlined with a gold color. That’s neat, but when you hover over them with your cursor the line changes color!&lt;/p&gt;

&lt;p class=&quot;codepen&quot; data-height=&quot;300&quot; data-theme-id=&quot;dark&quot; data-default-tab=&quot;css,result&quot; data-slug-hash=&quot;eYxqWdb&quot; data-user=&quot;JLO64&quot; style=&quot;height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/JLO64/pen/eYxqWdb&quot;&gt;
  Underline Links Hover&lt;/a&gt; by Julian Lopez (&lt;a href=&quot;https://codepen.io/JLO64&quot;&gt;@JLO64&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://cpwebassets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;This is a small thing, but it adds such a layer of interactivity to websites and I’m surprised it’s not more common.&lt;/p&gt;

&lt;h2 id=&quot;text-glowingrobin-rendle&quot;&gt;&lt;a href=&quot;https://robinrendle.com/&quot;&gt;Text Glowing(Robin Rendle)&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This site has three themes: Light, Dark, and Communist (seriously lol). Under the Communist theme the title text flickers. My first assumption was that the title text was a gif on loop. However, the text could be highlighted meaning that this wasn’t the case. Instead, there was an animation being applied to that element and all it was doing was changing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;text-shadow&lt;/code&gt; property.&lt;/p&gt;

&lt;p class=&quot;codepen&quot; data-height=&quot;300&quot; data-theme-id=&quot;dark&quot; data-default-tab=&quot;css,result&quot; data-slug-hash=&quot;KKJOmQG&quot; data-user=&quot;JLO64&quot; style=&quot;height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/JLO64/pen/KKJOmQG&quot;&gt;
  Untitled&lt;/a&gt; by Julian Lopez (&lt;a href=&quot;https://codepen.io/JLO64&quot;&gt;@JLO64&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://cpwebassets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Unfortunately this effect doesn’t work that well on a white background. Still, I think it’s a neat effect to add to my links.&lt;/p&gt;

&lt;h2 id=&quot;random-posts512kb-club&quot;&gt;&lt;a href=&quot;https://512kb.club/&quot;&gt;Random Posts(512kb Club)&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;So for the longest time I’ve been meaning to add a way to read a random post. Initially I thought I couldn’t add a way to do this on a static site. I had thoughts about using an external service to do this, like having an AWS Lambda function that had an array containing links to all the posts on my site and returning one of them at random. Then I came across the implementation of this site.&lt;/p&gt;

&lt;p class=&quot;codepen&quot; data-height=&quot;300&quot; data-theme-id=&quot;dark&quot; data-default-tab=&quot;js,result&quot; data-slug-hash=&quot;oNmKVBW&quot; data-user=&quot;JLO64&quot; style=&quot;height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/JLO64/pen/oNmKVBW&quot;&gt;
  Random &amp;lt;a&amp;gt; Link&lt;/a&gt; by Julian Lopez (&lt;a href=&quot;https://codepen.io/JLO64&quot;&gt;@JLO64&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://cpwebassets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;I’m going to be honest. I was kinda pissed off when I saw this solution working with minimal effort and code. I was prepared to go all out and try to use cloud solutions for this. Seeing this work made me feel stupid!&lt;/p&gt;

&lt;h2 id=&quot;email-linkgarrit-franke&quot;&gt;&lt;a href=&quot;https://garrit.xyz/&quot;&gt;Email link(Garrit Franke)&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;At the bottom of all posts on this website I noticed there was a link to “Reply via E-Mail”. Clicking on it created a draft email in my personal inbox on the web. I thought that there would be a bunch of complicated JavaScript behind this, but it was just one line of HTML!&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;mailto:admin@example.net?subject=Re: An Example Subject&quot;&amp;gt;Email Link&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Out of all the things I’ve shown off here, this is the one that is the simplest, yet adds the most functionality to my site. I don’t really like the idea of adding comments to my site since I know that they will be something that is hardly ever used and that I can not control effectively. Besides, I’d have to rely on a third party service &lt;a href=&quot;/posts/2023/12/bringing-my-old-website-back-from-the-dead&quot;&gt;like I did on my old site&lt;/a&gt; which I’d rather not do for my blog. This eliminates those concerns by using a simple tool that we all have.&lt;/p&gt;

&lt;h2 id=&quot;website-iconsyoutube&quot;&gt;Website Icons(YouTube)&lt;/h2&gt;
&lt;p&gt;Typically in the description of their videos YouTubers put links to their social media. To the left of these links, icons representing the sites they point towards have been added. From a user perspective, these are great since they help show where you are being sent to.&lt;/p&gt;

&lt;p class=&quot;codepen&quot; data-height=&quot;300&quot; data-theme-id=&quot;dark&quot; data-default-tab=&quot;css,result&quot; data-slug-hash=&quot;YzBmgxY&quot; data-user=&quot;JLO64&quot; style=&quot;height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/JLO64/pen/YzBmgxY&quot;&gt;
  Untitled&lt;/a&gt; by Julian Lopez (&lt;a href=&quot;https://codepen.io/JLO64&quot;&gt;@JLO64&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://cpwebassets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;While the method YouTube and I use are different, the results are the same. Before looking into this, I had no clue that you could edit what comes before a link or any element with just CSS. You can even use this to add a mail icon to the email links I highlighted above!&lt;/p&gt;

&lt;p&gt;That said, this is a manual process so not all of the external links on my site have an icon. I’ve thought about automating this but then I would lose control over the exact Favicon and color being used for links.&lt;/p&gt;

&lt;h2 id=&quot;using-this-code-effectively&quot;&gt;Using This Code Effectively&lt;/h2&gt;

&lt;p&gt;Individually, these are all neat effects and tricks but when combined well they result in something worth being proud of. There is no single thing on my site that I can point to and say “this makes my website look good”. It’s the combination of a bunch of little details that makes anything in life look good. As such, I have to thank the people who took the time to make their websites look pretty which made mine better as well.&lt;/p&gt;

		</content>
		<author><name>Julian Lopez</name></author>
		
			<category term="webdev" />
		
			<category term="html" />
		
			<category term="css" />
		
		<summary type="html">&lt;p&gt;The term “steal” has a bunch of negative connotations, but I feel that taking HTML/CSS/JS from other’s websites be viewed as a bad thing. Personally, I would feel more than pleased to learn that someone decided to steal code from my site for their own use! However, instead of just copying other’s websites, I’ve decided to showcase where I’ve been sourcing stuff from. That way, people looking to copy my code can compare against its origin.&lt;/p&gt;
</summary>
  	</entry>
  
  	<entry>
		<title type="html">Running a Jekyll Dev Server</title>
		<link href="https://www.julianlopez.net/posts/2023/12/running-a-jekyll-dev-server" rel="alternate" type="text/html" title="Running a Jekyll Dev Server" />
		<published>2023-12-12T00:00:00Z</published>
		<updated>2023-12-12T00:00:00-08:00</updated>
		<id>https://www.julianlopez.net/posts/2023/12/Running-a-Jekyll-Dev-Server</id>
		<content type="html" xml:base="https://www.julianlopez.net/posts/2023/12/running-a-jekyll-dev-server">
			
			
			
			
			
			&lt;h2 id=&quot;my-plugin-problem&quot;&gt;My Plugin Problem&lt;/h2&gt;

&lt;p&gt;Here’s a quick breakdown of how my writing process for this blog works. I have a server in my bedroom which I remote into within VS Code my laptop or iPad via VS Code. From there I create and edit markdown files within my Jekyll site repository and publish them via Git. (I’m probably going to be changing my workflow significantly soon thanks to &lt;a href=&quot;https://obsidian.md/&quot;&gt;Obsidian&lt;/a&gt;, and I’ll write more in depth then.)&lt;/p&gt;

&lt;p&gt;In order to preview my website I use a VS Code extension called &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Dedsec727.jekyll-run&quot;&gt;Jekyll Run&lt;/a&gt;. All it really does is run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt; within your site directory and serves your site at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:4000&lt;/code&gt;. Since I run it off my server and because I want to test this preview on my phone, I add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--host=0.0.0.0&lt;/code&gt; to the launch options of this plugin. This way I can just connect to port 4000 of my server’s IP address from my phone’s web browser and access the preview from there.&lt;/p&gt;

&lt;p&gt;The actual preview itself works great, but I’ve been having issues with the plugin not terminating when I disconnect from my server. Thus, when I reconnect and try to launch it again it errors out since the port (4000 in my case) is occupied. There’s a plugin setting that’s meant to fix this, but it does nothing in my case. I suspect that the author of it never tested an SSH use case. I’ve submitted a &lt;a href=&quot;https://github.com/Kanna727/jekyll-run/issues/67&quot;&gt;GitHub Issue&lt;/a&gt;, but I doubt I this will get fixed anytime soon.&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;/h2&gt;

&lt;p&gt;Something I’ve thought of recently is just launching the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec jekyll serve --host=0.0.0.0&lt;/code&gt; on startup and just leaving it running on my server. It’s a dead simple fix that requires no thought. Besides, now that I’m transitioning my writing to Obsidian for my writing I want to use a plugin called “Permalink Opener” to open a preview of what I’m writing. Switching between Obsidian and VS Code just to activate a plugin wouldn’t the best experience. (It’s got one major issue though that I’m gonna be submitting a PR for soon.)&lt;/p&gt;

&lt;p&gt;I also want to change the port I use to something other than 4000 since I might need that open for other applications. That can be easily done by appending &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-P PORT_NUMBER&lt;/code&gt; with you substituting your port number in of course.&lt;/p&gt;

&lt;p&gt;To run this command on boot I appended the below line to my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crontab&lt;/code&gt; file.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@reboot cd PATH_TO_YOUR_JEKYLL_DIRECTORY &amp;amp;&amp;amp; bundle exec jekyll serve --host=0.0.0.0 -P PORT_NUMBER
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;creating-a-jekyll-subdomain&quot;&gt;Creating A Jekyll Subdomain&lt;/h2&gt;

&lt;p&gt;Now while this is perfectly workable so far, I’d rather have a real URL to connect to instead of having to type in a port number after my domain. Thus I decided to add a “jekyll” subdomain to my site. This is literally the same thing as what I wrote about in my &lt;a href=&quot;/posts/2023/11/setting-up-my-domain&quot;&gt;previous post on adding subdomains&lt;/a&gt; so I won’t be going into too much detail about it here. Below is what I added to my Nginx config and my AWS route 53 settings.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
    listen 80;
    server_name jekyll.julianlopez.net;
    location / {
       proxy_pass http://localhost:JEKYLL_PORT;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-12-12-Running-a-Jekyll-Dev-Server/_route53_I8iJ4bRVP.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-12-12-Running-a-Jekyll-Dev-Server/_route53_I8iJ4bRVP.png?tr=w-480&quot; alt=&quot;A screenshot of an AWS Route 53 domain record.&quot; class=&quot;blog_image&quot; title=&quot;A screenshot of an AWS Route 53 domain record.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Here is the AWS Route 53 domain record I set up for this subdomain.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;If you’re going to copy what I’m doing, make sure that the port you’re using is open on your router and firewall in addition to Nginx being properly configured. Otherwise, you’ll only be able to access this preview from your local&lt;/p&gt;

&lt;p&gt;With that, I’m done! If you want to check out the changes I’m going to be making to my site before I publish them, visit &lt;a href=&quot;http://jekyll.julianlopez.net&quot;&gt;jekyll.julianlopez.net&lt;/a&gt;.&lt;/p&gt;

		</content>
		<author><name>Julian Lopez</name></author>
		
			<category term="nginx" />
		
			<category term="jekyll" />
		
			<category term="webdev" />
		
		<summary type="html">&lt;h2 id=&quot;my-plugin-problem&quot;&gt;My Plugin Problem&lt;/h2&gt;
</summary>
  	</entry>
  
  	<entry>
		<title type="html">Bringing My Old Website Back From The Dead</title>
		<link href="https://www.julianlopez.net/posts/2023/12/bringing-my-old-website-back-from-the-dead" rel="alternate" type="text/html" title="Bringing My Old Website Back From The Dead" />
		<published>2023-12-09T00:00:00Z</published>
		<updated>2023-12-09T00:00:00-08:00</updated>
		<id>https://www.julianlopez.net/posts/2023/12/Bringing-My-Old-Website-Back-From-The-Dead</id>
		<content type="html" xml:base="https://www.julianlopez.net/posts/2023/12/bringing-my-old-website-back-from-the-dead">
			
			
			
			
			
			&lt;h2 id=&quot;my-assignment&quot;&gt;My Assignment&lt;/h2&gt;

&lt;p&gt;At the start of this year I took a Japanese class as is required of all majors at USC Dornsife (don’t ask what grade I got). A big part of this class was a blogging project where students had to create and comment on posts in Japanese. The instructions had us use Blogger, but this wasn’t appealing to me. The interface was bad, posts looked terrible, the blogs looked bland, and there was not enough customization for me. So I decided to search for an alternative.&lt;/p&gt;

&lt;p&gt;I didn’t want to rent a server since I wanted to spend as little cash as possible on this (I’m a broke college student) which immediately ruled out running a &lt;a href=&quot;https://wordpress.com&quot;&gt;WordPress site&lt;/a&gt;. If I had my current home server back then (this was months before I built it) I probably would have looked this more, but then I found out about static websites.&lt;/p&gt;

&lt;p&gt;Prior to looking into this, I thought all websites required a server to run 24/7 in order to serve files and process user queries. This is kinda half true. Website information can be precompiled and stored on a publicly accessible file system without the need for any computational resources. Sites that are made this way are called “Static Websites”. Since I wasn’t doing anything fancy I decided to go with this opinion which still left me with many choices for where to store these files. To my surprise, you can actually configure an &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html&quot;&gt;AWS S3 bucket&lt;/a&gt; to host a website which was great since I had used this service plenty of times before.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-12-9-Bringing-My-Old-Website-Back-From-The-Dead/_aws-static-settings_mh5-44oep.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-12-9-Bringing-My-Old-Website-Back-From-The-Dead/_aws-static-settings_mh5-44oep.png?tr=w-480&quot; alt=&quot;A screenshot of AWS S3 static website hosting settings.&quot; class=&quot;blog_image&quot; title=&quot;A screenshot of AWS S3 static website hosting settings.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;This page is within the settings of an S3 bucket.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;To actually create and generate this blog I decided to go with &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; which is probably one of the most popular and thus best documented options out there. Plus, there are a bunch of free to use themes to customize the way your site looks. I went with &lt;a href=&quot;https://github.com/h01000110/windows-95&quot;&gt;windows-95&lt;/a&gt; which has a retro look that I like and works surprisingly well on mobile!&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-12-9-Bringing-My-Old-Website-Back-From-The-Dead/_mobile-website_Oo7ad8a0Z.jpeg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-12-9-Bringing-My-Old-Website-Back-From-The-Dead/_mobile-website_Oo7ad8a0Z.jpeg?tr=w-480&quot; alt=&quot;A screenshot taken from an iPhone of a website with a Windows 95 theme.&quot; class=&quot;blog_image&quot; title=&quot;A screenshot taken from an iPhone of a website with a Windows 95 theme.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Here&apos;s how it looks on my phone.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;All I needed to do to add a post was to create a markdown file in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory, build the site by running the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle exec jekyll build&lt;/code&gt; in the root directory of the website, then sync said directory to my S3 bucket. Just with that &lt;a href=&quot;http://julian-lopez-usc-jpn3-blog.s3.us-west-2.amazonaws.com/index.html&quot;&gt;I had something good enough for my class&lt;/a&gt;!&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-12-9-Bringing-My-Old-Website-Back-From-The-Dead/_old_website_UhH4agVL2.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-12-9-Bringing-My-Old-Website-Back-From-The-Dead/_old_website_UhH4agVL2.png?tr=w-480&quot; alt=&quot;A screenshot of a website with a Windows 95 theme.&quot; class=&quot;blog_image&quot; title=&quot;A screenshot of a website with a Windows 95 theme.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;I like the way my current blog looks, but I have to admit this looks awesome.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;h2 id=&quot;commenting-was-required&quot;&gt;Commenting Was Required&lt;/h2&gt;

&lt;p&gt;However, the assignment didn’t involve just writing and posting blogs. We were required to write comments on other’s posts which was fun since it forced us to read each other’s blogs. However, there was a catch. According to the rubric, users had to be able to submit comments without creating or signing in to an account. While this seems relatively simple, most embeddable comment services require users to login to something (typically a Google/Facebook account) as an anti spam measure. I initially used &lt;a href=&quot;https://commentbox.io&quot;&gt;CommentBox&lt;/a&gt; (which worked great) but they require an account login. I had to switch to &lt;a href=&quot;https://cusdis.com/#pricing&quot;&gt;Cusdis&lt;/a&gt; which surprisingly fit well with my site theme. Both of these options are free up to a certain point (100+ comments per month) which is great since my site got nowhere near that limit&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-12-9-Bringing-My-Old-Website-Back-From-The-Dead/_comments_iR7CiP3wO.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-12-9-Bringing-My-Old-Website-Back-From-The-Dead/_comments_iR7CiP3wO.png?tr=w-480&quot; alt=&quot;A screenshot of Cusdis comments.&quot; class=&quot;blog_image&quot; title=&quot;A screenshot of Cusdis comments.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;It kinda looks as if it is a part of the theme.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;I’m still not fully content with having to rely on a 3rd party service like this (especially one that I doubt will exist for years to come) but it’s something I can’t really bother myself to change. I doubt I’ll ever make any effort to save these comments, buttttttttt who knows.&lt;/p&gt;

&lt;h2 id=&quot;switching-to-github&quot;&gt;Switching To GitHub&lt;/h2&gt;

&lt;p&gt;Now this is the part where I admit that the title is clickbait. The original website I made for this assignment is still live and reachable on S3. However, it’s not exactly up to my current standards. For one, the url is just terrible (&lt;a href=&quot;https://julian-lopez-usc-jpn3-blog.s3.us-west-2.amazonaws.com/index.html&quot;&gt;https://julian-lopez-usc-jpn3-blog.s3.us-west-2.amazonaws.com/index.html&lt;/a&gt;). I have since purchased a domain (julianlopez.net) and have been using that for a bunch of other sites I have (&lt;a href=&quot;/posts/2023/11/setting-up-my-domain&quot;&gt;as I outlined in this blog post&lt;/a&gt;). Switching the domain of this website to that is a no brainer. Additionally, HTTPS is something that I believe all websites should have for security reasons. However, I didn’t know about it back then and didn’t set it up for that site.&lt;/p&gt;

&lt;p&gt;Both of these issues can be fixed on an S3 hosted website, but the process isn’t exactly easy. While S3 is great for just file storage, it’s not exactly something made with websites in mind. What they have in place is only good for just the bare minimum of static website hosting.&lt;/p&gt;

&lt;p&gt;By chance, I found out (no joke, I got it from the URL of a &lt;a href=&quot;https://hiatus-hiatus.github.io&quot;&gt;manga fan page&lt;/a&gt;) that GitHub has a service called &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt; to host static websites. It is wayyyyy better than using an S3 bucket, automatically provides HTTPS, has support for custom domains, and has version history through Git. Ever since I The only issue with it is that the source files have to be on a GitHub repository, which are public unless you pony up the $4/month for a GitHub Pro subscription. I’m fine with the &lt;a href=&quot;https://github.com/JLO64/JLO64.github.io&quot;&gt;source files of my blog being public&lt;/a&gt;, but I’d rather not have others snoop around the source files of my other sites.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-12-9-Bringing-My-Old-Website-Back-From-The-Dead/_github-pages_38keHiWpd.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-12-9-Bringing-My-Old-Website-Back-From-The-Dead/_github-pages_38keHiWpd.png?tr=w-480&quot; alt=&quot;A screenshot of the GitHub Pages settings for a website.&quot; class=&quot;blog_image&quot; title=&quot;A screenshot of the GitHub Pages settings for a website.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;These are my GitHub Pages settings for this blog.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;(As it turns out, Netlify also supports auto HTTPS, custom domains, and pushing files via Git. This is in addition to being easier to work with for hosting multiple websites and not requiring a subscription to hide source files. This has made me seriously consider switching to them for hosting my all my websites.)&lt;/p&gt;

&lt;h2 id=&quot;how-special-this-site-is-to-me&quot;&gt;How Special This Site Is To Me&lt;/h2&gt;

&lt;p&gt;I know it doesn’t seem this way, by far this is the most important website I have (and perhaps will) &lt;strong&gt;ever&lt;/strong&gt; make. This might seem like an exaggeration, but it’s not. Making this site got me get into web development as a hobby, and it was thanks to this that I met someone very special who changed my life forever. Plus who knows, this might even become a bit of a career for me!&lt;/p&gt;

		</content>
		<author><name>Julian Lopez</name></author>
		
			<category term="webdev" />
		
			<category term="jekyll" />
		
			<category term="blogging" />
		
			<category term="aws" />
		
		<summary type="html">&lt;h2 id=&quot;my-assignment&quot;&gt;My Assignment&lt;/h2&gt;
</summary>
  	</entry>
  
  	<entry>
		<title type="html">What I Carry In My Pockets</title>
		<link href="https://www.julianlopez.net/posts/2023/11/what-i-carry-in-my-pockets" rel="alternate" type="text/html" title="What I Carry In My Pockets" />
		<published>2023-11-28T00:00:00Z</published>
		<updated>2023-11-28T00:00:00-08:00</updated>
		<id>https://www.julianlopez.net/posts/2023/11/what-i-carry-in-my-pockets</id>
		<content type="html" xml:base="https://www.julianlopez.net/posts/2023/11/what-i-carry-in-my-pockets">
			
			
			
			
			
			&lt;h2 id=&quot;phone-stuff&quot;&gt;Phone Stuff&lt;/h2&gt;

&lt;p&gt;In my front right pocket I carry my phone (&lt;a href=&quot;https://www.apple.com/shop/buy-iphone/iphone-15/6.1-inch-display-128gb-blue-unlocked&quot;&gt;a white-blue iPhone 15&lt;/a&gt;) which has a USC branded sticker wallet (which I got for free!) on its generic clear case I bought at Best Buy. The two cards that are in there are my student ID and California State ID. I strongly prefer using Apple Pay as a payment method and here in LA most places accept it (especially after the pandemic).&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_IMG_0289_rWYtnCzDE.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_IMG_0289_rWYtnCzDE.jpg?tr=w-480&quot; alt=&quot;A photo of an iPhone 15 with a clear case and a stick on wallet.&quot; class=&quot;blog_image&quot; title=&quot;A photo of an iPhone 15 with a clear case and a stick on wallet.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;You can tell this photo was taken on an iPad.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;My back right pocket houses my wired earphones (&lt;a href=&quot;https://www.apple.com/shop/product/MNHF2AM/A/earpods-35mm-headphone-plug&quot;&gt;Apple 3.5mm EarPods&lt;/a&gt; with a &lt;a href=&quot;https://www.apple.com/shop/product/MU7E2AM/A/usb-c-to-35-mm-headphone-jack-adapter&quot;&gt;USB-C adaptor&lt;/a&gt;). To be frank, wireless earbuds aren’t worth it for me. It’s a hassle to always keep them charged, they’re extra fragile, and above all else super pricy for something that has to be replaced every 2-3 years. Maybe someday I’ll be wowed by the convenience offered by AirPods, but for now I’ll stick to wired audio.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_IMG_1200_YO09keCe6.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_IMG_1200_YO09keCe6.jpg?tr=w-480&quot; alt=&quot;A photo of Apple EarPods with an Aux to USB-C adaptor.&quot; class=&quot;blog_image&quot; title=&quot;A photo of Apple EarPods with an Aux to USB-C adaptor.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;These things have been around for so long for a reason.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;Now my front left pocket is where things get interesting.&lt;/p&gt;

&lt;h2 id=&quot;pennotebook-stuff&quot;&gt;Pen/Notebook Stuff&lt;/h2&gt;

&lt;p&gt;First, I have a fountain pen to write stuff with. My pen of choice is a modified &lt;a href=&quot;https://www.jetpens.com/Platinum-Plaisir-Fountain-Pen-Blue-03-Fine-Nib/pd/5985&quot;&gt;Platinum Plaisir&lt;/a&gt; (the body is a Plaisir but the internals are of a &lt;a href=&quot;https://www.jetpens.com/Platinum-Preppy-Wa-Modern-Maki-e-Fountain-Pen-Shima-to-Tomoe-03-Fine-Nib-Limited-Edition/pd/37601&quot;&gt;Preppy with a fine nib&lt;/a&gt;) with &lt;a href=&quot;https://www.jetpens.com/Sailor-Shikiori-Shigure-Ink-Rain-Showers-Izayoi-no-Yume-20-ml-Bottle/pd/22562&quot;&gt;Sailor Shikiori Shigure (dark purple) Ink&lt;/a&gt;. I used to carry a &lt;a href=&quot;https://www.jetpens.com/Kaweco-Brass-Sport-Fountain-Pen-Fine-Nib/pd/13984&quot;&gt;Brass Kaweco Sport&lt;/a&gt; with me, but I found that too heavy despite its small size. This Plaisir is bigger but considerably lighter which makes it perfect for one handed use.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_IMG_1201_xvqtFXJb-.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_IMG_1201_xvqtFXJb-.jpg?tr=w-480&quot; alt=&quot;A photo of a Platinum Plaisir along with Sailor Shikiori Shigure ink behind it.&quot; class=&quot;blog_image&quot; title=&quot;A photo of a Platinum Plaisir along with Sailor Shikiori Shigure ink behind it.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;I like this pen and ink combo.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;Next, I have a passport sized Leather cover with two notebooks inside held together by bands. This cover was given to me as a gift so I don’t know where to buy it, which is a shame because I would love to get more! Initially I just had one notebook in there, but after watching &lt;a href=&quot;https://youtu.be/bq0wud7wJi4?si=H-nNChbvjuQuzszf&amp;amp;t=130&quot;&gt;a video on how the bands work for the Traveler Notebook&lt;/a&gt; I added another notebook to it.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_IMG_1198_z_-SACxTD.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_IMG_1198_z_-SACxTD.jpg?tr=w-480&quot; alt=&quot;A photo of a passport size leather cover with notebooks inside of it along with a pen strapped to it.&quot; class=&quot;blog_image&quot; title=&quot;A photo of a passport size leather cover with notebooks inside of it along with a pen strapped to it.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;It fits perfectly in my pocket with my pen!&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;My first and favorite notebook is &lt;a href=&quot;https://www.jetpens.com/Rhodia-Unlimited-Notebook-Pocket-3.5-x-5.5-Lined-Black/pd/10781&quot;&gt;my Rhodia notebook&lt;/a&gt;. Inside the pages are grid lined, have a header for titles/dates, perforated for easily tearing off pages, ink doesn’t bleed through, and it has a band to keep it closed.  However, what made me fall in love with it is its durability.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_IMG_1197_vUuLMXnjz.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_IMG_1197_vUuLMXnjz.jpg?tr=w-480&quot; alt=&quot;A photo of a Rhodia Unlimited notebook inside a leather case.&quot; class=&quot;blog_image&quot; title=&quot;A photo of a Rhodia Unlimited notebook inside a leather case.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;The cover has gotten a bit worn out tho.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;Several months ago I was visiting NYC and had a breakfast appointment with a friend from a summer job. Unfortunately, the city was dealing with some of its &lt;a href=&quot;https://www.bbc.com/news/live/world-us-canada-66963276&quot;&gt;worst flooding in years&lt;/a&gt; that morning. After getting stuck in a bus inside Central Park, I stupidly waded through several waist high flooded tunnels to make it to my appointment (I was still late by 1+ Hour). In doing so I killed a portable battery I had with me and my iPhone started boot looping (so much for being waterproof). My Rhodia notebook was perfectly fine though! There is zero trace of water damage to the pages which is just astonishing considering what they went through.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_tunnel_photo_75SWjN09P.jpeg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_tunnel_photo_75SWjN09P.jpeg?tr=w-480&quot; alt=&quot;A photo of a Rhodia Unlimited notebook inside a leather case.&quot; class=&quot;blog_image&quot; title=&quot;A photo of a Rhodia Unlimited notebook inside a leather case.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Not my proudest moment.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;My other notebook isn’t quite so great. It’s a &lt;a href=&quot;https://pencils.com/products/forestchoice-small-flex-notebook-triple-set?variant=23948024053860&quot;&gt;ForestChoice notebook with squared paper&lt;/a&gt;, and if I’m being honest I wouldn’t recommend it. It’s not bad, but ink bleeds through it more than I would like. Apparently it uses extra special “forest friendly” paper (it’s not recycled tho) but that doesn’t make it worth it in my eyes.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_IMG_1202_LgxSuFEAPu.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-28-what-i-carry-in-my-pockets/_IMG_1202_LgxSuFEAPu.jpg?tr=w-480&quot; alt=&quot;A photo of the inside of a ForestChoice notebook.&quot; class=&quot;blog_image&quot; title=&quot;A photo of the inside of a ForestChoice notebook.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;I like using this notebook to plan out things.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;To round things out, I keep my back left pocket empty. Sometimes I put a wallet in there, but I prefer not to. I’m a believer in always leaving extra space/resources for whatever might arise.&lt;/p&gt;

		</content>
		<author><name>Julian Lopez</name></author>
		
			<category term="notebooks" />
		
			<category term="fountain-pens" />
		
			<category term="writing" />
		
		<summary type="html">&lt;h2 id=&quot;phone-stuff&quot;&gt;Phone Stuff&lt;/h2&gt;
</summary>
  	</entry>
  
  	<entry>
		<title type="html">Setting Up My Domain</title>
		<link href="https://www.julianlopez.net/posts/2023/11/setting-up-my-domain" rel="alternate" type="text/html" title="Setting Up My Domain" />
		<published>2023-11-20T00:00:00Z</published>
		<updated>2023-11-20T00:00:00-08:00</updated>
		<id>https://www.julianlopez.net/posts/2023/11/setting-up-my-domain</id>
		<content type="html" xml:base="https://www.julianlopez.net/posts/2023/11/setting-up-my-domain">
			
			
			
			
			
			&lt;h2 id=&quot;why-did-i-buy-a-domain&quot;&gt;Why did I buy a domain?&lt;/h2&gt;

&lt;p&gt;Recently I decided to purchase a domain through AWS Route 53 for the purpose of making connecting to my server at home easier. Before I bought this domain whenever I had to connect to the stuff I have hosted on there (RSS feeds/media server/torrenting/etc) I had to type out my entire IP address. This is obviously a pain to do multiple times per day, and there are certain services/apps that don’t work well with just IP addresses. Thus, I decided to pay $11 per year for this domain (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;julianlopez.net&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Having it point towards my home server was super easy, all I had to do was create an A record in my DNS records with no subdomain and the value being my server IP address. After I did that, it worked perfectly! All I had to do in order to connect to my server via SSH was just type in the domain and login info and it worked!&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-20-setting-up-my-domain/images_route_53_XOmB4z2P6.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-20-setting-up-my-domain/images_route_53_XOmB4z2P6.png?tr=w-480&quot; alt=&quot;A screenshot of an AWS Route 53 A record.&quot; class=&quot;blog_image&quot; title=&quot;A screenshot of an AWS Route 53 A record.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Don&apos;t put anything for the subdomain and set your server&apos;s IP address as your value.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;h2 id=&quot;subdomains-are-awesome&quot;&gt;Subdomains are awesome!&lt;/h2&gt;

&lt;p&gt;However, I got inspired by &lt;a href=&quot;https://chriscoyier.net/2023/09/21/use-subdomains/&quot;&gt;a post by Chris Coyier&lt;/a&gt; to try using subdomains to better organize and keep track of all the stuff I have running on ports off my server. Plus, there was one time that I tried showing said stuff to a friend while at their place, but I completely blanked out on most of my port numbers! I wasn’t able to show them much… Never again!&lt;/p&gt;

&lt;p&gt;Af first, I was at a complete loss at how to do this. I was able to create subdomains within the AWS console, but I couldn’t route them to my server. Eventually I figured out that within DNS records you can only have an IP address, you can’t have an IP address &lt;em&gt;and&lt;/em&gt; port number there. Instead what you have to do is create A records for your desired subdomain and have them point to the exact same IP address as the initial A record.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-20-setting-up-my-domain/images_hosted_zone_kJQN4YkWZ.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-20-setting-up-my-domain/images_hosted_zone_kJQN4YkWZ.png?tr=w-480&quot; alt=&quot;A screenshot of an AWS Route 53 hosted zone&apos;s records.&quot; class=&quot;blog_image&quot; title=&quot;A screenshot of an AWS Route 53 hosted zone&apos;s records.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Despite these A records all having different subdomains, they all point to the same IP address.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;Now all these subdomains were being routed properly to my server, but once at the server they were not being routed to the port they needed to use. For that I had to set up Nginx to properly forward my requests to my port of choice.&lt;/p&gt;

&lt;p&gt;Within the http section of my Nginx config (on my Ubuntu server its filepath is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/nginx/nginx.conf&lt;/code&gt;) I added code similar to what I have below to redirect requests from port 80 (the default port web browsers try to connect to) to the appropriate port. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server_name&lt;/code&gt; is just the subdomain plus domain.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http{
    ...
    server {
        listen 80;
        server_name subdomain_one.julianlopez.net;

        location / {
            proxy_pass http://localhost:69;
            }
    }
    server {
        listen 80;
        server_name subdomain_two.julianlopez.net;
        location / {
            proxy_pass http://localhost:420;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After restarting Nginx (I ran &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/init.d/nginx restart&lt;/code&gt; as root), I no longer had to type in port numbers when accessing my stuff! I was initially concerned that switching to subdomains might break some functionality, but everything worked perfectly.&lt;/p&gt;

&lt;h2 id=&quot;making-my-blog-cooler&quot;&gt;Making my blog cooler&lt;/h2&gt;

&lt;p&gt;I could have my blog accessible through my domain through Nginx served off my server since it’s a static Jekyll site. However, I like using GitHub Pages for for my site hosting since it provides SSL certificates without having to do anything extra. Additionally, I like the idea of showing off my site assets (HTML/CSS/JS) if anyone wants to copy something I made. Thankfully, GitHub Pages allows you to use your domain along with a subdomain to host your website. All you have to do is verify your domian via DNS records, then add a filenamed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; containing your subdomain and domain (in my case: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://www.julianlopez.net/&lt;/code&gt;)&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-20-setting-up-my-domain/images_github_verification_gfrDCSX-9.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/www_julianlopez_net/2023-11-20-setting-up-my-domain/images_github_verification_gfrDCSX-9.png?tr=w-480&quot; alt=&quot;A screenshot of the GitHub page to verify ownership of your domain.&quot; class=&quot;blog_image&quot; title=&quot;A screenshot of the GitHub page to verify ownership of your domain.&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Create a TXT record with the string from 1. as your subdomain and the string from 2. as the value of your record.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;If you want to host more than one website on your same GitHub account you just need to repeat all these steps, but also change the url in your Jekyll &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file to your subdomain and domain.&lt;/p&gt;

&lt;h2 id=&quot;what-about-the-root-domain&quot;&gt;What about the root domain?&lt;/h2&gt;

&lt;p&gt;At this point, when I put &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;julianlopez.net&lt;/code&gt; into my web browser I just got a page from Nginx. This seemed like a waste of this URL, plus people trying to access my blog probably wouldn’t type in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www.&lt;/code&gt; part. To fix both of these problems I decided to have my server route all requests for my root domain ot my&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
    listen 80;
    server_name julianlopez.net;
    return 301 https://www.julianlopez.net;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I was worried that this might reroute ALL requests to my server (including SSH) but this is not the case. It only reroutes web traffic (port 80 stuff) so I have nothing to be worried about.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;At first, this was all beyond daunting to even attempt but this all now feels super easy to set up! I believe the lack of proper documentation and explainers for some of these topics (especially setting up multiple sites on GitHub Pages) contributes towards making this all look hard.&lt;/p&gt;

&lt;p&gt;In the future I might look into having Nginx run via docker so that I can manage it in Portainer alongside all the other containers I have running, but I’m concerned about how that might work with SSL encryption via Let’s Encrypt.&lt;/p&gt;

		</content>
		<author><name>Julian Lopez</name></author>
		
			<category term="webdev" />
		
			<category term="nginx" />
		
		<summary type="html">&lt;h2 id=&quot;why-did-i-buy-a-domain&quot;&gt;Why did I buy a domain?&lt;/h2&gt;
</summary>
  	</entry>
  
  	<entry>
		<title type="html">Am I Worth My Tools?</title>
		<link href="https://www.julianlopez.net/posts/2023/11/am-i-worth-my-tools" rel="alternate" type="text/html" title="Am I Worth My Tools?" />
		<published>2023-11-10T00:00:00Z</published>
		<updated>2023-11-10T00:00:00-08:00</updated>
		<id>https://www.julianlopez.net/posts/2023/11/am-i-worth-my-tools</id>
		<content type="html" xml:base="https://www.julianlopez.net/posts/2023/11/am-i-worth-my-tools">
			
			
			
			
			
			&lt;p&gt;I’ll be the first to admit, I don’t exactly have access to the best tools for my projects. The laptop I used to use has a crappy Intel Pentium processor with 4 GB of RAM, but I often use an 8th gen iPad now for most of my Tech needs. That said, I view this as less of a detriment but more of an opportunity to learn how to maximize the tools at my disposal. If I had a full fat laptop with all the power/storage/memory I could ever want I wouldn’t have learned certain skills that I’ve picked up. For instance, there are plenty of things that you simply cannot do on an iPad. In order to get around this, I’ve set up virtual machines (Windows 10 / Endeavor OS) on my home server that I can remote into with Anydesk. Now I can do anything that can be done on a desktop from a thin and mobile iPad! I turned this weakness into an opportunity to learn and grow my personal skill set, which can help me in my future career.&lt;/p&gt;

&lt;p&gt;That said, I have a certain friend with the opposite mindset of mine. What he does is go out and purchase the best equipment possible for whatever it is he is working on. For his Adobe Lightroom projects he doesn’t bat an eye at blowing huge amounts of cash on laptops with 64 GB of RAM and multiple terabytes of NVMe storage. A more… extreme example of his mindset was his decision to purchase $1000 fountain pen. In order to write well he should only use the best writing tools!&lt;/p&gt;

&lt;p&gt;In a way, I suppose my personal belief on this topic can be explained by a concern of worth. “Am I worth this amazing new gadget?” in the case of my home server(her name is Izumi), I initially didn’t feel this way. However, this concern faded away as I slowly pushed her more and more to her limits. Now, as I have multiple VMs / Docker containers / a GitLab instance / media sharing via Jellyfin / and a bunch more, I no longer feel these concerns of worth. Instead, I am now concerned by how to upgrade and expand my horizons further!&lt;/p&gt;

		</content>
		<author><name>Julian Lopez</name></author>
		
			<category term="fountain-pens" />
		
			<category term="thoughts" />
		
		<summary type="html">&lt;p&gt;I’ll be the first to admit, I don’t exactly have access to the best tools for my projects. The laptop I used to use has a crappy Intel Pentium processor with 4 GB of RAM, but I often use an 8th gen iPad now for most of my Tech needs. That said, I view this as less of a detriment but more of an opportunity to learn how to maximize the tools at my disposal. If I had a full fat laptop with all the power/storage/memory I could ever want I wouldn’t have learned certain skills that I’ve picked up. For instance, there are plenty of things that you simply cannot do on an iPad. In order to get around this, I’ve set up virtual machines (Windows 10 / Endeavor OS) on my home server that I can remote into with Anydesk. Now I can do anything that can be done on a desktop from a thin and mobile iPad! I turned this weakness into an opportunity to learn and grow my personal skill set, which can help me in my future career.&lt;/p&gt;
</summary>
  	</entry>
  
  	<entry>
		<title type="html">How I Listen To Music</title>
		<link href="https://www.julianlopez.net/posts/2023/10/how-i-listen-to-music" rel="alternate" type="text/html" title="How I Listen To Music" />
		<published>2023-10-26T00:00:00Z</published>
		<updated>2023-10-26T00:00:00-07:00</updated>
		<id>https://www.julianlopez.net/posts/2023/10/how-i-listen-to-music</id>
		<content type="html" xml:base="https://www.julianlopez.net/posts/2023/10/how-i-listen-to-music">
			
			
			
			
			
			&lt;p&gt;Growing up as a Kid I loved listening to anime music on my iPod. I started out by purchasing songs off of iTunes for $0.99, but there weren’t that many songs on there from shows that I liked. (In hindsight, they might have had them but with Japamese titles which I couldn’t read/search.) The one place I was able to easily find these songs was on YouTube so I used that as my source. I would grab the URLs I wanted and go visit some sketchy YoaTube to MP3 websites, import the MP3s into iTunes, then sync my iPod.&lt;/p&gt;

&lt;p&gt;Over a decade later and the way I listen to my music has not fundamentally changed. I used Apple Music / Spotify for a while but the music selecton still wasn’t great for me especially for Video game soundtracks. YouTube Music was almost pertect but I had issues with certain tracks being removed and readded from listening availibilty. Thus I’ve stuck to transferring MP3s to my phone although I’ve made a few improvements on the overall process.&lt;/p&gt;

&lt;p&gt;I have a bash script that a cron job runs periodically which syncs my YouTube playlists and the music on my server. This scipt also adds Album name metadata using eyeD3 which I have match the playlist titles. This way, I can easily sort the music in my Ilbrary without having to resort to creating playlists.&lt;/p&gt;

		</content>
		<author><name>Julian Lopez</name></author>
		
		<summary type="html">&lt;p&gt;Growing up as a Kid I loved listening to anime music on my iPod. I started out by purchasing songs off of iTunes for $0.99, but there weren’t that many songs on there from shows that I liked. (In hindsight, they might have had them but with Japamese titles which I couldn’t read/search.) The one place I was able to easily find these songs was on YouTube so I used that as my source. I would grab the URLs I wanted and go visit some sketchy YoaTube to MP3 websites, import the MP3s into iTunes, then sync my iPod.&lt;/p&gt;
</summary>
  	</entry>
  
  	<entry>
		<title type="html">Good Customer Support</title>
		<link href="https://www.julianlopez.net/posts/2023/08/good-customer-support" rel="alternate" type="text/html" title="Good Customer Support" />
		<published>2023-08-31T00:00:00Z</published>
		<updated>2023-08-31T00:00:00-07:00</updated>
		<id>https://www.julianlopez.net/posts/2023/08/good-customer-support</id>
		<content type="html" xml:base="https://www.julianlopez.net/posts/2023/08/good-customer-support">
			
			
			
			
			
			&lt;p&gt;Having to make a phone call and talk to a companies customer support always sucks. Nowhere has this been more apparent to me than when I have been on hold for over an hour to talk to my university’s financial aid department. However, there have been some rare instances where I found my experiences almost enjoyable.&lt;/p&gt;

&lt;h2 id=&quot;consumer-cellular&quot;&gt;Consumer Cellular&lt;/h2&gt;

&lt;p&gt;Several years ago I was helping a guy out. He got mugged and had all of his possession stolen. I decided to give him an old phone of mine, but we needed to transfer his phone number to it. So we had to call his cellular provider, consumer cellular to do so. Keep in mind, prior to this the two of us had made multiple excruciating phone calls, over the better part of a month to replace some of his lost possessions. Just to attempt to replace one of these items took multiple days worth of calls and often ended in failure. Thus, you weren’t expecting much from a single car. After a long wait (probably around 30 minutes) the two of us finally got on the line with someone. Immediately I knows this person had a southern accent which of reassuring since it meant I was not dealing with an international call center (which have never provided good service in my experience). Two are shocked and surprised, within 10 minutes we managed to get the number transferred! This is so unexpectedly quick I just had to think the representative on the phone for how great the service was.&lt;/p&gt;

&lt;h2 id=&quot;nintendo-of-america&quot;&gt;Nintendo of America&lt;/h2&gt;

&lt;p&gt;As I mentioned in the previous post, I recently bought myself a used Nintendo 3DS. However, when I attempted to use my Nintendo account to access the eShop (this was before closure) I was blocked from doing so because the account of its previous owner was still tied to the console. The procedure for removing that account involved making a phone call to a Nintendo of America line for 3DS inquiries, and have a representative Remove it for me. To my surprise, not only was this line still active years after the 3DS had been discontinued (this was probably in 2021), but there was hardly any wait time to speak to someone. The person I then spoke to was super chill and completely understood why I purchased “outdated” console (purely for nostalgia). After I was done with that call, I made sure to give that representative a glowing review on the email questionnaire I was later sent.&lt;/p&gt;

&lt;h2 id=&quot;amazon-web-services&quot;&gt;Amazon Web Services&lt;/h2&gt;

&lt;p&gt;To this day, this is the most incredible customer support experience I’ve ever had. Back in my final year of high school, I was experimenting with making an inventory app for a club I created to donate computers to low income families. Of course, I had no clue I was doing so at one point I accidentally pushed AWS IAM credential info to GitHub. Within 24 hours I got a call from the Seattle number. To my shock and awe, it was an AWS support employee who had called to inform me that they had noticed that keys tied to my account were publicly viewable on GitHub and they had deactivated them to protect my account. Suffice to say, my 18 year old mind was blown. I have issues with the way Amazon and their cloud services division sometimes conduct business, but the incredible support I received from them on that day will always stick with me and be a driving reason why I use their services.&lt;/p&gt;

		</content>
		<author><name>Julian Lopez</name></author>
		
			<category term="thoughts" />
		
		<summary type="html">&lt;p&gt;Having to make a phone call and talk to a companies customer support always sucks. Nowhere has this been more apparent to me than when I have been on hold for over an hour to talk to my university’s financial aid department. However, there have been some rare instances where I found my experiences almost enjoyable.&lt;/p&gt;
</summary>
  	</entry>
  
  	<entry>
		<title type="html">Finding Flags on a Website</title>
		<link href="https://www.julianlopez.net/posts/2023/07/finding-flags-on-a-website" rel="alternate" type="text/html" title="Finding Flags on a Website" />
		<published>2023-07-30T00:00:00Z</published>
		<updated>2023-07-30T00:00:00-07:00</updated>
		<id>https://www.julianlopez.net/posts/2023/07/finding-flags-on-a-website</id>
		<content type="html" xml:base="https://www.julianlopez.net/posts/2023/07/finding-flags-on-a-website">
			
			
			
			
			
			&lt;p&gt;A while back, I was on a website that had a weird link near the bottom that was titled “Capture the Flag”. Clicking on it, directed me to a “secret” page that described how there were six hidden flags throughout the site with in format “GXYZ{***}”. If you managed to find a flag, you could have your name added to a “hall of fame” along with the number of flags you had found.&lt;/p&gt;

&lt;p&gt;Coincidentally, earlier that day I had come across a blog post that had something to do with storing data within image files. On a hunch, I download an image of a flag that was on that page and opened it in Vim. To my pleasant surprise, at the end of the file there was a flag! Unfortunately I haven’t found any other flags yet, but I haven’t been trying that hard.&lt;/p&gt;

&lt;p&gt;I won’t be linking to this website since it would be unfair as I’ve already detailed one of the flags. That being said, a quick web search (Bing in my case) will result in many similar challenges open to all.&lt;/p&gt;

		</content>
		<author><name>Julian Lopez</name></author>
		
		<summary type="html">&lt;p&gt;A while back, I was on a website that had a weird link near the bottom that was titled “Capture the Flag”. Clicking on it, directed me to a “secret” page that described how there were six hidden flags throughout the site with in format “GXYZ{***}”. If you managed to find a flag, you could have your name added to a “hall of fame” along with the number of flags you had found.&lt;/p&gt;
</summary>
  	</entry>
  
  	<entry>
		<title type="html">Cleaning My 3DS</title>
		<link href="https://www.julianlopez.net/posts/2023/05/cleaning-my-3ds" rel="alternate" type="text/html" title="Cleaning My 3DS" />
		<published>2023-05-16T00:00:00Z</published>
		<updated>2023-05-16T00:00:00-07:00</updated>
		<id>https://www.julianlopez.net/posts/2023/05/cleaning-my-3ds</id>
		<content type="html" xml:base="https://www.julianlopez.net/posts/2023/05/cleaning-my-3ds">
			
			
			
			
			
			&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#weird-problems-with-my-3ds&quot;&gt;Weird Problems with my 3DS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cleaning-the-3ds&quot;&gt;Cleaning the 3DS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#a-new-sd-card&quot;&gt;A new SD Card&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#footnotes&quot;&gt;Footnotes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;weird-problems-with-my-3ds&quot;&gt;Weird Problems with my 3DS&lt;/h2&gt;

&lt;p&gt;Ever since I bought my 3DS from a retro game store&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, I’ve been having some weird issues with it.
After playing a game for a while (10 minutes+), the system would freeze and I’d get an error on the bottom screen.
At first I thought this was tied to the homebrew/firmware I had installed, but I couldn’t find anything online regarding similar behavior.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post3/IMG_3810.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post3/IMG_3810.jpg?tr=w-480&quot; alt=&quot;A Nintendo 3DS with a crash screen&quot; class=&quot;blog_image&quot; title=&quot;A Nintendo 3DS with a crash screen&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;This is what a crash would look like.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;Additionally it only had a 1 in 3 chance of turning on when you pressed the power button.
Removing the SD card and reinserting it seemed to help, but that might have been a placebo.
There were times were it look me upwards of 5 minutes to turn it on, which was especially annoying after a crash.&lt;/p&gt;

&lt;p&gt;On top of this, removing the SD card was a pain since the cover for the SD card slot almost never closed properly.
As a result the system would often not recognize the SD card which prevented it from booting with homebrew.
This was also just annoying at a practical level since I had to carry around my 3DS with the SD card cover slightly open.&lt;/p&gt;

&lt;h2 id=&quot;cleaning-the-3ds&quot;&gt;Cleaning the 3DS&lt;/h2&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post3/IMG_3797.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post3/IMG_3797.jpg?tr=w-480&quot; alt=&quot;A Nintendo 3DS with the back removed&quot; class=&quot;blog_image&quot; title=&quot;A Nintendo 3DS with the back removed&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Take a good look around the screw holes.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;Removing the back of the 3DS (which only took 4 phillips screws) revealed yet another problem.
There was some sort of yellowish residue around the screw holes, which was also present in between the “seams” on the bottom of the 3DS.
My best guess is that at some point the previous owner (probably a dumb kid) spilled something on it which might have damaged/broken it and sold it to the store I bought it from.
They then probably repaired it, but didn’t do a great job of cleaning it and only did the bare minimum to get it working.
Credit to that store though, they gave me a free warranty so I could have gotten it fixed for free, but given that I hacked it and was running homebrew I didn’t want to push my luck.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post3/IMG_3800.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post3/IMG_3800.jpg?tr=w-480&quot; alt=&quot;The exposed SD card slot of a Nintendo 3DS with gunk in it&quot; class=&quot;blog_image&quot; title=&quot;The exposed SD card slot of a Nintendo 3DS with gunk in it&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;A look at the gunk in the SD slot.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;Disassembling it further revealed that the SD card slot was also full of this gunk.
This was causing extra friction with the SD card which was why it was so hard to close the cover.
The fact that this gunk was also present here makes me think that this 3DS was submerged in some sort of liquid.
That it survived at all is probably a miracle.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post3/IMG_3803.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post3/IMG_3803.jpg?tr=w-480&quot; alt=&quot;A clean disassembled Nintendo 3DS&quot; class=&quot;blog_image&quot; title=&quot;A clean disassembled Nintendo 3DS&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;The finished result.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;It took me several hours, but I got rid of any trace of the gunk.
Unfortunately, I didn’t have any rubbing alcohol (and I wasn’t crazy enough to use water) so I had to use a bunch of disposable alcohol wipes and just rub the plastic as hard as I could.
I didn’t want to touch any of the electronic stuff, but I noticed that the game cartridge slot might have had some signs of corrosion.
In the future I’ll probably try to clean that out as well, but for now I’m just happy that my 3DS is working again.&lt;/p&gt;

&lt;h2 id=&quot;a-new-sd-card&quot;&gt;A new SD Card&lt;/h2&gt;

&lt;p&gt;When I first hacked my 3DS I used a 128GB SD card I had been using for my Switch.
The idea was to have all the games I could ever possibly want installed on my 3DS.
However, this isn’t a great idea since the 3DS can only use 32GB SD cards by default.
While it can use larger SD cards, it generally becomes slower the larger the SD card is.
My suspicion is that the reason my 3DS was crashing was because of how slow the SD card was.&lt;/p&gt;

&lt;p&gt;Thankfully I have a friend who traded me a 32GB SD card for my 128GB one.
All I had to do to use it with my 3DS was format it to FAT32 and copy over the files from my old SD card.
The only hard part about this was that I had to delete a bunch of games to make it fit on the 32GB card.
After that it worked perfectly and I haven’t had any crashes since!&lt;/p&gt;

&lt;p&gt;Now my only problem is that I promised him I’d trade my 128GB card for it and I’ve since lost it!&lt;/p&gt;

&lt;h2 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;GameHogs in East Los Angeles. They have by far the sketchiest storefront I’ve ever been inside, but the interior is amazing. I’ve never seen such a large selection of games, much less retro games! Highly recommend if you’re in the area. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;

		</content>
		<author><name>Julian Lopez</name></author>
		
			<category term="3ds" />
		
		<summary type="html">&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#weird-problems-with-my-3ds&quot;&gt;Weird Problems with my 3DS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cleaning-the-3ds&quot;&gt;Cleaning the 3DS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#a-new-sd-card&quot;&gt;A new SD Card&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#footnotes&quot;&gt;Footnotes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary>
  	</entry>
  
  	<entry>
		<title type="html">Generating Fake McDonald&apos;s Screenshots With AWS and OpenAI</title>
		<link href="https://www.julianlopez.net/posts/2023/05/fake-mcdonalds-screenshots" rel="alternate" type="text/html" title="Generating Fake McDonald&apos;s Screenshots With AWS and OpenAI" />
		<published>2023-05-01T00:00:00Z</published>
		<updated>2023-05-01T00:00:00-07:00</updated>
		<id>https://www.julianlopez.net/posts/2023/05/fake-mcdonalds-screenshots</id>
		<content type="html" xml:base="https://www.julianlopez.net/posts/2023/05/fake-mcdonalds-screenshots">
			
			
			
			
			
			&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post2/banner.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post2/banner.jpg?tr=w-480&quot; alt=&quot;The McDonald&apos;s app&quot; class=&quot;blog_image&quot; title=&quot;The McDonald&apos;s app&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Honestly the deals you can get through points are amazing.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#my-problem&quot;&gt;My Problem&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#generating-images-in-the-cloud&quot;&gt;Generating Images in the Cloud&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#making-the-canvas&quot;&gt;Making the Canvas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#its-all-in-the-details&quot;&gt;It’s all in the details&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#chatgpt-can-do-almost-anything&quot;&gt;ChatGPT can do (almost) anything&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#training-a-custom-gpt-3-model&quot;&gt;Training a custom GPT-3 model&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#drawing-it-all-together&quot;&gt;Drawing it all together&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#apple-shortcuts-is-awesome&quot;&gt;Apple Shortcuts is awesome&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#the-final-product&quot;&gt;The final product&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;my-problem&quot;&gt;My Problem&lt;/h2&gt;
&lt;p&gt;Several months ago, I had a dumb first world problem.
Typically my mom likes to order food from McDonald’s using the app, that way she gets points she can redeem for free food. However, in order to pick up at the counter you need to show the order confirmation screen on your phone.&lt;/p&gt;

&lt;p&gt;She (being my mother) would then force me to take her phone and pick up the order for her.
I don’t mind being the one to pick up the food, but I don’t like having to use her phone to do it.&lt;/p&gt;

&lt;p&gt;If only there was a way I could make a fake screenshot of the McDonald’s app with the her order info in it…&lt;/p&gt;

&lt;h2 id=&quot;generating-images-in-the-cloud&quot;&gt;Generating Images in the Cloud&lt;/h2&gt;
&lt;p&gt;A loooong time ago, I made an inventory system built on AWS for a community service thing that donated computers to low income individuals/families.
The main thing it was designed to keep track of was all of the computers that we received/refurbished/donated.&lt;/p&gt;

&lt;p&gt;Initially, in order to tell which computer was which, we placed masking tape and wrote on them with sharpies.
However, people’s (my) handwriting sucked so you often come across many computers with illegible ID numbers.
To fix this I wanted to have an app where you could create an entry for a computer and enter in all of its specs and other relevant information.
Then it would create a PNG with an ID number and a QR code that could be printed on a label and stuck on the computer.&lt;/p&gt;

&lt;p&gt;In order to do this, I made an Android app that would create a new entry in a DynamoDB database with all of the appropriate fields.
Then the app would trigger a Lambda function that would generate the PNG using information from that entry (ID number and computer type), and upload it to an S3 bucket where it could be accessed elsewhere. Looking back on this, I hate this and I am glad that I don’t have any of this code anymore.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;https://mermaid.ink/img/pako:eNpFkMtuwjAQRX9lNCsqwYpdFpVCjNiQijaswF0M8QQs4oeMoyoi_DsmUDGreZzRvbpXrJ1izLBp3V99ohBhK6SFVPk-tyo4rSD3_hdms8-hCEyRYVPA0sbQD7CYiN6ScWLx8XoauZLODN8_sPlaDVBM1mQOil5EMRJVdOGNJMXnUeyr-SgFg9AX31L_z-Q4RcPBkFbJ7fWBS4wnNiwxS63ihro2SpT2llDqoqt6W2MWQ8dT7LxKzoWmYyCDWUPtJW092Z1z75mVTr7KZyJjMLc7mIZblg?type=png&quot; alt=&quot;Diagram of AWS backend&quot; /&gt;
  &lt;figcaption style=&quot;text-align:center&quot;&gt;I&apos;m going off my memory here, so this is probably wrong.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Fundamentally, generating a fake McDonald’s screenshot would be much simpler than this since I don’t need to deal with any of the database stuff.
However, unlike these labels which are just text on a white background, I’d need to have a background image and place text on top of it.&lt;/p&gt;

&lt;h2 id=&quot;making-the-canvas&quot;&gt;Making the Canvas&lt;/h2&gt;

&lt;p&gt;First I ordered an Oreo McFlurry from a McDonald’s with my phone and took a screenshot of the order confirmation page.
I then imported it into GIMP, erased a bunch of stuff within it, and split it into two images, one for the top half and one for the bottom half.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post2/top_half.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post2/top_half.jpg?tr=w-480&quot; alt=&quot;&quot; class=&quot;blog_image&quot; title=&quot;&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;&lt;/figcaption&gt;
 &lt;/picture&gt;
&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post2/bottom_half.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post2/bottom_half.jpg?tr=w-480&quot; alt=&quot;&quot; class=&quot;blog_image&quot; title=&quot;&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;It&apos;s weird seeing so much blank space in this image&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;The reason I split it into two images was because I didn’t to have a limit to how many items I could have in the order.
If I had stuck with just the original screenshot, the order text could have gone off the bottom of the screen so I figured stitching two images together would be an easy fix.&lt;/p&gt;

&lt;h2 id=&quot;its-all-in-the-details&quot;&gt;It’s all in the details&lt;/h2&gt;
&lt;p&gt;I initially kept the time in the upper left cover, but if I tried ordering at night and the time was 1:00 PM it could potentially give me away.
Luckily, Apple really likes using “Helvetica” in their software so I was able to easily download a ttf file and use it to generate the time.&lt;/p&gt;

&lt;p&gt;The rest of the text was not so easy to fake.
I used an online text analyzer to figure out what font McDonald’s uses, and it wasn’t able to nail it down 100%.
Additionally, all of the fonts it was suggesting were paid fonts, so I couldn’t just download them.
After some trial and error I settled on “Heebo Black” which isn’t a perfect match, but it’s close enough for a brief glance.
If anyone were to take a closer look in comparison to the real app this would probably be the first thing they notice.&lt;/p&gt;

&lt;p&gt;Thankfully, because I used Apple Pay when I placed my order, I didn’t have to worry about providing a real debit card number.
Without getting too into it, my understanding is that Apple Pay generates a different card number for each transaction.
Thus I was able to just use a random number generator to generate a four digit number and use that as the card number.&lt;/p&gt;

&lt;p&gt;However, the toughest issue was the cost of the order which I needed a way to guess.&lt;/p&gt;

&lt;h2 id=&quot;chatgpt-can-do-almost-anything&quot;&gt;ChatGPT can do (almost) anything&lt;/h2&gt;
&lt;p&gt;The answer (of course) was to use AI!&lt;/p&gt;

&lt;p&gt;Prior to this project, I had been screwing around with OpenAI’s APIs and they are shockingly easy to work with.
Plus, they’re super cheap!&lt;/p&gt;

&lt;p&gt;To oversimplify a bit, the newer an AI model is the better it is.
When I started working on this project OpenAI had released an endpoint for a model called GPT-3.5 Turbo intended for chat (which I think is what ChatGPT uses).
(Now they are up to GPT-4)
Since that was the best model they had available at that time, I decided to use it.&lt;/p&gt;

&lt;p&gt;I got it working pretty quickly, but there were some serious problems.
For one, it wasn’t very good at pricing things.
Multiple queries with the exact same prompt would yield wildly different results.
When guessing how much a Big Mac cost I would get responces that ranged from $2.99 to $5.99.
This is because McDonald’s prices vary wildly across America, but whenever I tried to specify SoCal/California pricing it just refused to generate a number.&lt;/p&gt;

&lt;p&gt;Additionally, no matter what I gave it as a prompt, I couldn’t get it to output in a standardized format.
For instance, I wanted it to output $2.99 as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2.99&lt;/code&gt; but I would typically get &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$2.99&lt;/code&gt;.
No problem, I can easily use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.replace(&apos;$&apos;, &apos;&apos;)&lt;/code&gt; to get rid of the dollar sign.
But what was even more frustrating was that I had gotten got outputs like  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Your cost would be $2.99&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Total Cost: 2.99&lt;/code&gt;, and others like that instead of just the number I wanted.&lt;/p&gt;

&lt;p&gt;I could have tried fixed these problems, but I decided to take a different approach towards using the API.&lt;/p&gt;

&lt;h2 id=&quot;training-a-custom-gpt-3-model&quot;&gt;Training a custom GPT-3 model&lt;/h2&gt;
&lt;p&gt;Thankfully the chat endpoint wasn’t the only offering OpenAI had with their API.&lt;/p&gt;

&lt;p&gt;Something I had been wanting to try for a while was training my own GPT-3 model.
In short, its as easy as making a spreadsheet with a bunch of example inputs and outputs, putting it through an OpenAI JSONL formatter, and then uploading it to the API.&lt;/p&gt;

&lt;p&gt;So I spent just over an hour going the McDonald’s app for the location I go to and logged the prices for almost everything there.
After that I uploaded the data to the API and it took just shy of 30-45 minutes to train.
The longest part wasn’t the actual training, but waiting in the queue to get my turn to train&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post2/gpt-spreadsheet.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post2/gpt-spreadsheet.png?tr=w-480&quot; alt=&quot;&quot; class=&quot;blog_image&quot; title=&quot;&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;222 lines of McDonald&apos;s.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;At this point the model I trained was very good at guessing prices for individual menu items.
It was even able to provide the correct price even when I mistyped the name of an item.
However, it still wasn’t able to generate a total price for multiple items.
In order to get around this, I decided to have my code call the API for each item and add each result together.&lt;/p&gt;

&lt;p&gt;While I could have added additional training so it could process multiple items at once, I decided not to do that since the API was already pretty fast and this would only shave off a second or two.
It’s not worth it for me to spend an hour plus formating the data for that small of a speed increase.
Plus, in my experience I don’t trust a GPT-3 model to do addition correctly.
While GPT-4 is probably better overall, for my future OpenAI projects I’m going to break up my tasks and combine them with coding instead of trying to do it all in one API call.&lt;/p&gt;

&lt;h2 id=&quot;drawing-it-all-together&quot;&gt;Drawing it all together&lt;/h2&gt;

&lt;p&gt;Now that all the data is loaded, it just needs to be drawn on top of the edited screenshots.&lt;/p&gt;

&lt;p&gt;Thankfully drawing is super easy in Python using PIL(Pillow).
On my laptop all I had to do was install it with pip, type out a few lines of code, and I was done.
The only hard part was figuring out the coordinates for where to draw the text, but that was just a matter of trial and error.&lt;/p&gt;

&lt;p&gt;Unfortunately, it wasn’t this easy to use PIL on AWS Lambda.
Typically (for Python) you bundle your code and its dependencies into a zip file and upload it to AWS.
However, for some reason I couldn’t get my code to run properly on Lambda with its bundled dependencies (in this case PIL).
This could have been a big problem since as far as I know, this is the only way to upload pip dependencies to Lambda.&lt;/p&gt;

&lt;p&gt;Thankfully, I was able to get around this by using layers.
In short, someone else had already bundled PIL into a zip file and uploaded it to AWS.
With the ARN of that layer, I was able to use it in my Lambda function without having to bundle it myself.
If it weren’t for this guy I would have been kinda screwed.&lt;/p&gt;

&lt;p&gt;Overall Azure Functions are a lot easier to work with since you can actually prepackage your code with its dependencies and upload it directly to Azure within VS Code.
For this and other reasons, I might consider redeploying this project on Azure in the future.&lt;/p&gt;

&lt;h2 id=&quot;apple-shortcuts-is-awesome&quot;&gt;Apple Shortcuts is awesome&lt;/h2&gt;

&lt;p&gt;Having a script that can generate a fake McDonald’s order is cool, but it’s not very useful if I have to run it on my laptop every time I want to use it.&lt;/p&gt;

&lt;p&gt;Luckily I only had to develop for iOS since it’s what my phone runs and I’m the only one who’s ever going to use this.
Unfortunately, I don’t have a Mac so I can’t use Xcode to develop an app.
Plus, back then I wasn’t as knowledgeable about web development as I am now.&lt;/p&gt;

&lt;p&gt;As it turns out, Apple has a built in app called Shortcuts that lets users create/share scripts that can be run from the home screen or with Siri.
Despite the drag and drop interface that is akin to Scratch, it is surprisingly powerful and has access to many system features.
For the purposes of this project, it is able to make HTTP requests and save images locally.&lt;/p&gt;

&lt;figure&gt;
  &lt;img src=&quot;https://mermaid.ink/img/pako:eNpVkEFrwzAMhf-K8Lk5beyQwyBpt15WCCRQWN2DaiuNIbZTR2aUJP997nLYppMkvif03iSU1yRy0fb-S3UYGJqddJCqOJmq846g7nxgFfkMWfYKc8c8wP6tgUC3SCPPUE7FsYYPtBeNUrrqzkkH79EpNt4t67lyVRsmCw4tzbA9NQGNIw37qsme4JA-6c8rvf1DD8GohJf_7lxwJHh5BnIPA3MhNsJSsGh0MjM9UCm4I0tS5KnV1GLsWQrploRiZF_fnRI5h0gbEQeNTDuD14BW5C32Y9oO6D69_51JG_bhsAb2k9vyDa7BaUA?type=png&quot; alt=&quot;Diagram of screenshot generation&quot; /&gt;
  &lt;figcaption style=&quot;text-align:center&quot;&gt;Honestly this is pretty simple.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;So I set up mmy script which asks for the name of the person who placed the order, the items they ordered, and what their order code was.
Then it appends this data to a URL and makes a GET request to the AWS Lambda function I set up earlier.
From there it downloads the image and saves it to the photos app.&lt;/p&gt;

&lt;h2 id=&quot;the-final-product&quot;&gt;The final product&lt;/h2&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post2/1D99F7A8-6145-492B-9ED4-5A365A12DA81.jpeg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post2/1D99F7A8-6145-492B-9ED4-5A365A12DA81.jpeg?tr=w-480&quot; alt=&quot;&quot; class=&quot;blog_image&quot; title=&quot;&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;A 100% fake screenshot.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;And with that I was done.
I had a means to fake McDonald’s screenshots on my phone in order to not use my mom’s phone.
All that was left was to use it in action…&lt;/p&gt;

&lt;p&gt;That Saturday I had my mother place an order off of her phone so that I could pick it up using only what I had made.
I then walked up to the counter more anxious than I had ever been picking up a Big Mac.
The person behind it then barely gave my phone a glance before handing me my order.
Success!&lt;/p&gt;

&lt;p&gt;Given this response, if I so desired I could easily use this to get free food and steal from McDonald’s and its patrons.
However, I am not a criminal and have chosen to never do this.
In order to avoid encouraging such bad behaviors (and so that I don’t get sued) I haven’t posted the full code for this project on GitHub.
Instead, I only pushed the code and assets for the image generation and the OpenAI API call, the AWS Lambda function, and the Apple Shortcut is not included.
If someone so desired, they could probably easily replace those missing parts with their own code.
That being said, if you have the know-how to do so, you probably have better things to do.&lt;/p&gt;

&lt;h2 id=&quot;the-obvious-easy-solution-to-my-dumb-problem&quot;&gt;The (Obvious) Easy Solution to my Dumb Problem&lt;/h2&gt;
&lt;p&gt;Of course, I immediately set about bragging about what I made to anyone I knew.
One person I told was a friend of mine who is a nurse and didn’t fully understand what I was talking about.
That being said, she asked a very simple question that I couldn’t answer.&lt;/p&gt;

&lt;p&gt;“Why couldn’t you ask your mom to send you a screenshot?”&lt;/p&gt;

&lt;p&gt;I was dumbfounded.
On this same line of thought, why did I have to create a way for this code to guess the price?
I could have easily added a field for me to input the price in the shortcut and it would’ve eliminate the need to use the OpenAI API.
However, in hindsight there was a simple answer to this question.&lt;/p&gt;

&lt;p&gt;“Why not?”&lt;/p&gt;

		</content>
		<author><name>Julian Lopez</name></author>
		
			<category term="python" />
		
			<category term="openai" />
		
			<category term="aws" />
		
		<summary type="html">&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post2/banner.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post2/banner.jpg?tr=w-480&quot; alt=&quot;The McDonald&apos;s app&quot; class=&quot;blog_image&quot; title=&quot;The McDonald&apos;s app&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Honestly the deals you can get through points are amazing.&lt;/figcaption&gt;
 &lt;/picture&gt;
</summary>
  	</entry>
  
  	<entry>
		<title type="html">Hacking My Nintendo 3DS</title>
		<link href="https://www.julianlopez.net/posts/2023/04/hacking-game-consoles-part-i" rel="alternate" type="text/html" title="Hacking My Nintendo 3DS" />
		<published>2023-04-11T00:00:00Z</published>
		<updated>2023-04-11T00:00:00-07:00</updated>
		<id>https://www.julianlopez.net/posts/2023/04/hacking-game-consoles-part-i</id>
		<content type="html" xml:base="https://www.julianlopez.net/posts/2023/04/hacking-game-consoles-part-i">
			
			
			
			
			
			&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post1/nintendo3ds-white-back.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post1/nintendo3ds-white-back.jpg?tr=w-480&quot; alt=&quot;An aqua-blue Nintendo 3DS with a stylus on a white background&quot; class=&quot;blog_image&quot; title=&quot;An aqua-blue Nintendo 3DS with a stylus on a white background&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;My childhood in a nutshell.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#hacking-explained&quot;&gt;Hacking explained&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#hacking-a-3ds&quot;&gt;Hacking a 3DS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#homebrew-3ds-apps&quot;&gt;Homebrew 3DS Apps&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#emulating-old-games&quot;&gt;Emulating Old Games&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#the-piracy-issue&quot;&gt;The Piracy Issue&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#should-you-buy-a-3ds-in-2023&quot;&gt;Should you buy a 3DS in 2023&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;As weird as it sounds to say this, if you have a Nintendo 3DS you should try hacking it!
And I’m not suggesting you do this just to pirate games.
But before I get into that let me give you a bit of a personal backstory.&lt;/p&gt;

&lt;p&gt;As a pre-teen, I grew up with my favorite gadget in the world, my aqua-blue 3DS.
I got it in 2011 (the year it came out) and back then it blew my mind that something so capable could fit in my pocket.
That was right before the first price drop (from $250 to $170), so to compensate consumers who paid full price they introduced the “Ambassador Program” which let members download several Gameboy Advance games for free!f
That in conjunction with all the great games that came out for it made it a perfect distraction from the real world.&lt;/p&gt;

&lt;p&gt;However in 2013, I lost it while meeting up with a friend of mine at Central Park in New York City!
I was devastated, but thankfully my mother ended up buying me an XL model later that year.
Years after the fact I came across a post on an obscure forum from someone who found an aqua-blue 3DS at that same location that matched the description of mine…&lt;/p&gt;

&lt;p&gt;Fast forward to 2021, and I was at a really cool retro game store in East LA called GameHogs.
I was trying to find a launch PS3 when I came across the exact same model of 3DS I had growing up as a kid!
I had to buy it, partially out of a sense of nostalgia, but also because I knew that if I hacked it I could do some really cool stuff with it.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post1/my-3ds.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post1/my-3ds.png?tr=w-480&quot; alt=&quot;an aqua-blue 3DS being held&quot; class=&quot;blog_image&quot; title=&quot;an aqua-blue 3DS being held&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;She&apos;s as beautiful as the day I lost her.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;h2 id=&quot;hacking-explained&quot;&gt;Hacking explained&lt;/h2&gt;
&lt;p&gt;Let’s get this out of the way though, hacking a game console is not illegal!&lt;/p&gt;

&lt;p&gt;Hacking can be defined as opening closed computer systems for functions other than they were designed for, such as homemade or as they’re called in this context “homebrew” software.
Simply put, you bought this gadget so you should be able to do what you want with it!
Honestly I think people call it hacking instead of modding because hacking sounds way cooler.&lt;/p&gt;

&lt;p&gt;Generally, there are two types of hackers (within console hacking): pirates who want to play games for free, and enthusiasts who want to do cool stuff with their consoles.
These two groups are often at odds with each other, but their goals overlap in wanting unrestricted access to their hardware.&lt;/p&gt;

&lt;h2 id=&quot;hacking-a-3ds&quot;&gt;Hacking a 3DS&lt;/h2&gt;
&lt;p&gt;I’m not going to get too deep into the details of how to hack a 3DS, this isn’t meant to be a tutorial and the exact methods are always changing.
That being said, you can visit &lt;a href=&quot;https://3ds.hacks.guide&quot;&gt;3ds.hacks.guide&lt;/a&gt; for the most up to date information on how to do so.
What I will cover are some of the apps you can install and what they bring to the table.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post1/3ds-hacks-guide.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post1/3ds-hacks-guide.png?tr=w-480&quot; alt=&quot;a screenshot of the 3ds.hacks.guide website&quot; class=&quot;blog_image&quot; title=&quot;a screenshot of the 3ds.hacks.guide website&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;All you need to do is follow the steps listed on here and you&apos;ll be good to go.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;First off, installers that allow you to install apps directly to the homescreen end with the extension “.cia”.
So of course, the app you use to install these files is called &lt;a href=&quot;https://github.com/Steveice10/FBI&quot;&gt;FBI&lt;/a&gt;.
With this app, you can either install app from files on your SD card, or you can scan a QR code 
Apps that have their source code posted on github often have these QR codes as well.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post1/fbi-qr.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post1/fbi-qr.png?tr=w-480&quot; alt=&quot;a screenshot of the FBI app scanning a QR code&quot; class=&quot;blog_image&quot; title=&quot;a screenshot of the FBI app scanning a QR code&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;This is by far the coolest feature I&apos;ve ever seen built into homebrew!&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;However, you don’t have to use this to install all of your software.
The app &lt;a href=&quot;https://github.com/Universal-Team/Universal-Updater&quot;&gt;Universal Updater&lt;/a&gt; acts as a sort of 3DS app store with plenty of new apps and updates for them being posted on there.
It’s a super easy way to not only download homebrew apps and games but keep them updated without having to deal with file management.&lt;/p&gt;

&lt;h2 id=&quot;homebrew-3ds-apps&quot;&gt;Homebrew 3DS Apps&lt;/h2&gt;
&lt;p&gt;My favorite homebrew game you can install from there is based off of a fairly popular one. Wordle DS!&lt;/p&gt;

&lt;p&gt;It’s surprisingly convenient having two screens to play it on and what’s even better is that it uses the same list of words as the official version!
I’ve often followed the development of this port on &lt;a href=&quot;https://gbatemp.net/threads/release-wordle-ds-a-clone-of-wordle-for-the-ds-i.607796/&quot;&gt;GBAtemp&lt;/a&gt; where the developer frequently posts updates and fun little tidbits about this app and the New York Times version of Wordle.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post1/ds-wordle.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post1/ds-wordle.png?tr=w-480&quot; alt=&quot;a photo of a 3DS running the Wordle DS app with a qr code on the bottom screen&quot; class=&quot;blog_image&quot; title=&quot;a photo of a 3DS running the Wordle DS app with a qr code on the bottom screen&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;It even generates a QR code so you can still share your score online.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;This of course isn’t the only piece of homebrew software I’ve downloaded for my 3DS.
I have &lt;a href=&quot;https://github.com/Cam-2002/Minesweeper-3DS&quot;&gt;Minesweeper&lt;/a&gt;, an app that showcases &lt;a href=&quot;https://github.com/memeToasty/3ds_sorting&quot;&gt;different sorting algorithms&lt;/a&gt;, and a port of a &lt;a href=&quot;https://github.com/LukeZGD/DDLC-LOVE&quot;&gt;perfectly harmless dating simulator&lt;/a&gt; made by the hacker known as 4chan.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post1/3ds-bad-apple.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post1/3ds-bad-apple.png?tr=w-480&quot; alt=&quot;a photo of the Bad Apple video playing on a 3DS&quot; class=&quot;blog_image&quot; title=&quot;a photo of the Bad Apple video playing on a 3DS&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Of course, you can play Bad Apple on it.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;Even better, custom themes are a thing! All you have to do is download &lt;a href=&quot;https://github.com/astronautlevel2/Anemone3DS&quot;&gt;Anemone3DS&lt;/a&gt; and use the built in qr code scanner to download themes from the &lt;a href=&quot;https://3dsthemes.com/&quot;&gt;3DS Theme Shop&lt;/a&gt;.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post1/winxp-theme.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post1/winxp-theme.png?tr=w-480&quot; alt=&quot;a photo of a 3DS with a Windows XP theme&quot; class=&quot;blog_image&quot; title=&quot;a photo of a 3DS with a Windows XP theme&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;I have a thing for retro looks.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;h2 id=&quot;emulating-old-games&quot;&gt;Emulating Old Games&lt;/h2&gt;
&lt;p&gt;But honestly, my favorite apps are the emulators people have developed for it.&lt;/p&gt;

&lt;p&gt;Atari 2600, NES, SNES, Genesis and plenty more retro consoles have emulators developed by fans with insane coding skills.
If you have a model that was released later in the 3DS’s lifespan (which is confusingly called the “New” 3DS), with improved clockspeeds and more RAM, you can even emulate PlayStation One games!&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post1/3ds-balloon-fight.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post1/3ds-balloon-fight.png?tr=w-480&quot; alt=&quot;a photo of a 3DS running the NES game balloon fight&quot; class=&quot;blog_image&quot; title=&quot;a photo of a 3DS running the NES game balloon fight&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Hands down my favorite game on the NES.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;Make no mistake, developing software for this is no easy feat.
The smartphone you have in your pocket is orders of magnitude more powerful and easier to develop for.&lt;/p&gt;

&lt;p&gt;Also, remember that ambassador program I mentioned near the start of this post?
For some reason, Nintendo never sold any of the GameBoy Advance games they released for that program despite the fact that they already put in the work to create an “emulator” (it’s more complex than that) for those games!
Unless you bought in early like me you couldn’t buy or play any of them.
However, thanks to the efforts of those in the homebrew community, you can now use that same “emulator” to run whatever GBA games you want!&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post1/3ds-metroid-fusion.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post1/3ds-metroid-fusion.png?tr=w-480&quot; alt=&quot;a photo of a 3DS running the Gameboy Advance game Metroid Fusion&quot; class=&quot;blog_image&quot; title=&quot;a photo of a 3DS running the Gameboy Advance game Metroid Fusion&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Metroid Fusion is still one of the scariest games I&apos;ve ever played!&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;h2 id=&quot;the-piracy-issue&quot;&gt;The Piracy Issue&lt;/h2&gt;
&lt;p&gt;To be blunt I’m ok with pirating games for my 3DS, but that’s because its a dead platform and me downloading games in 2023 for it doesn’t take away any potential earning from developers.
However, when I first got this particular 3DS the Nintento eShop was still running so I tried downloading &lt;em&gt;Mario &amp;amp; Luigi: Dream Team&lt;/em&gt; which is on the larger side of 3DS games.
No matter what I did I couldn’t get it to download, it would always initiate the download and then fail.&lt;/p&gt;

&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post1/dead-eshop.png?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post1/dead-eshop.png?tr=w-480&quot; alt=&quot;a photo of the Nintendo eShop on a 3DS failing to load&quot; class=&quot;blog_image&quot; title=&quot;a photo of the Nintendo eShop on a 3DS failing to load&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;It was fun while it lasted.&lt;/figcaption&gt;
 &lt;/picture&gt;

&lt;p&gt;By contrast, using a pirate site such as &lt;a href=&quot;https://hshop.xyz/&quot;&gt;hShop&lt;/a&gt; in conjunction with FBI I was able to successfully download/install the game.&lt;/p&gt;

&lt;p&gt;To be clear, I am not an advocate for piracy, but I do think it’s important to understand the difference between piracy and homebrew.&lt;/p&gt;

&lt;h2 id=&quot;should-you-buy-a-3ds-in-2023&quot;&gt;Should you buy a 3DS in 2023?&lt;/h2&gt;

&lt;p&gt;If you don’t care about playing the latest and greatest games and you like to tinker with your stuff, I highly recommend getting a 3DS.
For homebrew I fully recommend getting a “New” 3DS.
It’s more expensive but it’s worth it for the extra power and capabilities.
Honestly, when this model first came out there was almost no reason to buy it over the original versions, but now when it comes to homebrew it’s by far the superior choice.
Personally, I am content with my original 3DS, but that’s mainly because of the nostalgia factor it has for me.&lt;/p&gt;

		</content>
		<author><name>Julian Lopez</name></author>
		
			<category term="3ds" />
		
		<summary type="html">&lt;picture&gt;
    &lt;source srcset=&quot;https://ik.imagekit.io/jlo64/post1/nintendo3ds-white-back.jpg?tr=w-720,f-webp,&quot; type=&quot;image/webp&quot; /&gt;
    &lt;img src=&quot;https://ik.imagekit.io/jlo64/post1/nintendo3ds-white-back.jpg?tr=w-480&quot; alt=&quot;An aqua-blue Nintendo 3DS with a stylus on a white background&quot; class=&quot;blog_image&quot; title=&quot;An aqua-blue Nintendo 3DS with a stylus on a white background&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;My childhood in a nutshell.&lt;/figcaption&gt;
 &lt;/picture&gt;
</summary>
  	</entry>
  
</feed>
