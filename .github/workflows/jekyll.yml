name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    - cron: '0 6 */1 * *' # Run every day at 6:00 UTC, or 11PM PST

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  check_mastodon_rss:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Check Mastodon RSS
        id: check_mastodon_rss
        run: |
          result=$(bundle exec ruby _scripts/check_mastodon_rss.rb)
          echo $result
          if [[ $result == "false" ]]; then
            echo "Result is false, stopping the action"
            exit 1
          fi

  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.outputs.mastodon_updated == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Setup imagemagick
        run: sudo apt-get install imagemagick
      - name: Setup Python
        run: pip install -r _scripts/requirements.txt
      - name: Generate Descriptions with OpenAI API
        env:
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
            FINE_TUNE_GPT_MODEL: ${{ secrets.FINE_TUNE_GPT_MODEL }}
        run: python3 ./_scripts/gpt-summarize.py --generate-descriptions
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4